@import "./var";

@mixin textType($size:$_fontSize, $weight:$_fontWeight, $color:$_fontColor, $lineH:$_lineHeight){
  font-size:$size;
  font-weight:$weight;
  color:$color;
  line-height:$lineH;
}

@mixin textIndent {
  text-indent:-999px;
  overflow:hidden;
}

@mixin ellipsis($line: 1) {
  @if ($line == 1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
  }
}

@mixin positionAb($width:100%, $top:0px, $left:0px, $right:auto) {
  position:absolute;
  top:$top;
  left:$left;
  right:$right;
  width:$width;
}

@mixin hybridBox($position:relative, $width:100%) {
  position:$position;
  width:$width;
  &:after{
    content:"";
    display:block;
    clear:both;
  }
}

@mixin clear {
  content:"";
  display:block;
  clear:both;
}

@mixin gradientStyle($bg1:#6ababb, $bg2:$_pointColor) {
  background:#6ababb; 
  background:-moz-linear-gradient(-45deg,  $bg1 0%, $bg2 100%); 
  background:-webkit-linear-gradient(-45deg,  $bg1 0%, $bg2 100%); 
  background:linear-gradient(135deg,  $bg1 0%, $bg2 100%); 
  filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=$bg1, endColorstr=$bg2,GradientType=0 );  
}

@mixin btnMotion($bg:#fff, $activeBg:#2f7d4e, $time:0.4s) {
  position:relative;
  display:inline-block;
  overflow:hidden;

  &:before {
    content:"";
    display:block;
    width:calc(100% + 2px);
    height:100%;
    @include positionAb(100%, 100%, 0);
    background-color:$bg;
    border-radius:100% 100% 0 0;
    transition:all $time ease;
    z-index:0;
  }

  & > span {
    position:relative;
    z-index:1;
  }

  &.on, &:hover, &:active {
    &:before {
      height:190%;
      top:-90%;
      background-color:$activeBg;
    }
  }
}

@mixin btnCenterMotion($width:80px, $height:80px, $time:0.4s, $bg:#fff, $activeBg:#2f7d4e) {
  position:relative;
  min-width:auto !important;
  width:$width !important;
  height:$height !important;
  padding:0 !important;
  border-radius:50% !important;
  overflow:hidden;
  // transition:all $time ease;
  transform:scale(1);

  &:before {
    content:"";
    display:block;
    height:0;
    @include positionAb(0, 50%, 50%);
    transform:translate(-50%, -50%);
    background-color:$bg;
    border-radius:50%;
    transition:all $time ease;
    z-index:0;
  }

  & > span {
    position:relative;
    z-index:1;
  }

  &:hover, &:active {
    transform:scale(1.1);

    &:before {
      width:calc(100% + 2px);
      height:calc(100% + 2px);
      background-color:$activeBg;
    }
  }
}

@mixin listMotion($top:150px, $time:1.2s) {
  position:relative;
  top:$top;
  opacity:0;
  transition:all $time ease;

  &.active {
    top:0;
    opacity:1;
  }
}

@mixin widthGuide($width:calc(100% - 240px)) {
  width:$width;
  max-width:calc(100% - 240px);
  margin:0 auto;

  @include desktop(){
    width:calc(100% - 160px);
    max-width:calc(100% - 160px);
  }

  @include tablet(){
    width:92%;
    max-width:92%;
  }
}

@mixin virtualAB ($top, $left, $width, $height){
  content:'';
  display: block;
  position:absolute;
  top:$top;
  left:$left;
  width:$width;
  height:$height;
}

@mixin virtualIB ($width, $height){
  content:'';
  display: inline-block;
  width:$width;
  height:$height;
}

@mixin desktop-big {
  @media all and (min-width:1921px){
    @content;
  }
}

@mixin desktop {
  @media all and (max-width:#{$breakpoint-desktop}){
    @content;
  }
}

@mixin desktop-small {
  @media all and (max-width:#{$breakpoint-desktop-small}){
    @content;
  }
}

@mixin tablet {
  @media all and (max-width:#{$breakpoint-tablet}){
    @content;
  }
}

@mixin mobile {
  @media all and (max-width:#{$breakpoint-mobile}){
    @content;
  }
}

@mixin mobile-small {
  @media all and (max-width:#{$breakpoint-mobile-small}){
    @content;
  }
}

@mixin only-desktop-small {
  @media all and (min-width:#{$breakpoint-tablet}) and (max-width:#{$breakpoint-desktop-small}){
    @content;
  }
}

@mixin only-min-desktop {
  @media all and (min-width:#{$breakpoint-tablet}){
    @content;
  }
}

@mixin only-min-desktop-wide {
  @media all and (min-width:#{$breakpoint-desktop-wide}){
    @content;
  }
}